// Generated by ts-to-zod
import { z } from 'zod'

export const frameSchema = z.object({
  x: z.number(),
  y: z.number(),
  w: z.number(),
  h: z.number()
})

export const displaySchema = z.object({
  id: z.number(),
  uuid: z.string(),
  index: z.number(),
  frame: frameSchema,
  spaces: z.array(z.number())
})

export const spaceSchema = z.object({
  id: z.number(),
  uuid: z.string(),
  index: z.number(),
  label: z.string(),
  type: z.string(),
  display: z.number(),
  windows: z.array(z.number()),
  'first-window': z.number(),
  'last-window': z.number(),
  'has-focus': z.boolean(),
  'is-visible': z.boolean(),
  'is-native-fullscreen': z.boolean()
})

export const windowSchema = z.object({
  id: z.number(),
  pid: z.number(),
  app: z.string(),
  title: z.string(),
  frame: frameSchema,
  role: z.string(),
  subrole: z.string(),
  display: z.number(),
  space: z.number(),
  level: z.number(),
  layer: z.string(),
  opacity: z.number(),
  'split-type': z.string(),
  'split-child': z.string(),
  'stack-index': z.number(),
  'can-move': z.boolean(),
  'can-resize': z.boolean(),
  'has-focus': z.boolean(),
  'has-shadow': z.boolean(),
  'has-parent-zoom': z.boolean(),
  'has-fullscreen-zoom': z.boolean(),
  'is-native-fullscreen': z.boolean(),
  'is-visible': z.boolean(),
  'is-minimized': z.boolean(),
  'is-hidden': z.boolean(),
  'is-floating': z.boolean(),
  'is-sticky': z.boolean(),
  'is-grabbed': z.boolean()
})

export const displaysSchema = z.array(displaySchema)

export const spacesSchema = z.array(spaceSchema)

export const windowsSchema = z.array(windowSchema)
